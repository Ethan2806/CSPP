{
  
    
        "post0": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? cd, ls, cat, strings, ed, nano, vim, gedit , etc | What are the command you use in Windows terminal to access files? dir, cd, ls, del | What are some of the major differences?The commands used in Linux and macOS Terminal are generally case-sensitive, while the commands used in Windows Terminal are generally case-insensitive. | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? Path is a big deal when working with images because it is important to correctly specify the location of the image file in order to load it into the program. | How does the meta data source and label relate to Unit 5 topics? Meta data source and label are related to Unit 5 topics such as data preparation, data cleaning, and data labeling. | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? IPython is an interactive command-line shell for Python that provides additional functionality, such as tab completion, object introspection, and history tracking. In Jupyter Notebooks, IPython is used as the default kernel, allowing users to interactively run Python code and display the results in the notebook. | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;The Internet&quot;, &#39;label&#39;: &quot;smile&quot;, &#39;file&#39;: &quot;happyface.png&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . - The difference between Base64 and hex is really just how bytes are represented. Hex is another way of saying &quot;Base16&quot;. Hex will take two characters for each byte - Base64 takes 4 characters for every 3 bytes, so it&#39;s more efficient than hex. . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? An example that I have been a consumer of buffering is when I play video games, and if there are a lot of pixels that pop up at once my game starts to lag and my framerate starts to drop | From your consumer experience, what effects have you experienced from buffering? Some things I have learned from buffering is that the better your computer and the higher your graphic card etc, you will have a better performance on anything you do on the computer. | How do these effects apply to images? Because certain images have different pixels and certain amounts of pixels may cause buffering | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? There is a series of steps that are being performed. The code is basically printing images that are based off the file name. | Describe Grey Scale algorithm in English or Pseudo code? The Grey Scale algorithm is a process that takes an image and converts it into a black and white version of the same image, also known as a grayscale image. This algorithm works by calculating the average value of the red, green, and blue color components for each pixel in the original image and then setting the pixel value in the grayscale image to that average value. | Describe scale image? What is before and after on pixels in three images? Scaling an image means to change its size, either by making it smaller or larger. When an image is scaled, the number of pixels in the image changes, and the position and color values of those pixels may also change. For example, some images can be scaled into 5x5 to 10x10 which would be effecting the total scaling of the image itself. | Is scale image a type of compression? If so, line it up with College Board terms described? Scaling an image involves changing its size without changing its file size or data content, which means it does not involve compression. Compression, on the other hand, involves reducing the size of a file by removing some of its data content. Since compression removes data content and it removes its content, it will involve changing its file size because it removes content. | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2023/03/09/2.2.html",
            "relUrl": "/2023/03/09/2.2.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Collegeboard Test Corrections",
            "content": "5 . The answer I chose was A which was incorrect and the correct answer was B | The company is not able to provide a human representative for calls made after business hours. | . 22 . Answer I chose was D which was Neither Grid 1 nor Grid 2 and the correct answer was Grid I only. | The reasoning for Grid 1 only is because the Grid II has 2 black squares that are not supposed to be there which means that the Grid I was the correct answer to choose according to the statement 29 . | The answer that I chose for this question was option C which was true false true | The correct answer was C which was false false false because the first three statements assign values to the variables. The fourth statement assigns the value of (NOT (a OR b)) AND c to a. Since a OR b is true, NOT (a OR b) is false, so (NOT (a OR b)) AND c is false. The fifth statement assigns the value of c AND a to c. Since a is now false, c AND a is false. The last three statements display the values of the variables. 31 . | The answer I chose was C which was Check if the time is during business hours. If it is, check if the gate sensor is activated. If it is not, check if the gate is open. If it is not, turn on the motor. -The correct answer was Option D which was Check if the time is during business hours. If it is, check if the gate sensor is activated. If it is, check if the gate is open. If it is not, turn on the motor. | This option is correct because the algorithm continues past the first check if the time is during business hours, the algorithm continues past the second check if the gate sensor is activated, and the algorithm continues past the third check if the gate is not open. Performing the checks in this order will ensure that the gate is opened only under the appropriate conditions. | . 36 . The incorrect answer I chose was A which was II only and the correct answer was D which was II and III. | . 40 . Correct Answer was D which was no change is needed, I chose the incorrect answer of A which was Interchange the ROTATE_RIGHT and the ROTATE_LEFT blocks. | No change is needed in this code segment because the code segment in the question is already facing towards the bottom of the grid | . 41 . I chose option A which wass the geneti codes must be converted from binary to decimal numbers | The correct answer was option B which was the list must be sorted based on the genetic code values | This answer is correct because in order for binary search on a list to work as intended, the list must be sorted | . 45 . The incorrect answer was A and B and I chose those 2, while the correct answers were C and D | Procedural abstraction makes it easier for people to read computer programs. 48 . | The correct answer was A and B, I selected B and C. C was incorrect because random number generators can be used to simulate the variability that exists in the world, so results are not always the same. Validation of the results is usually accomplished by comparing the outcomes with those based on experimentation. 49 . | The correct answer was B and I chose A and the correct answer was B because simulations are limited by the model that is used. There may be many reasons for using a simplified model, including ease of implementation. | . 50 . Correct answer was algorithm A and D I selected algorithmn B and D, algorithm A is correct because As the size of the list grows, the number of steps needed to sort the list grows at a linear rate, as the number of steps is equal to 10n for a list of size n. This is an example of a polynomial efficiency and indicates that the algorithm runs in a reasonable amount of time. Reflection . | . I think that improvement is definitely still needed for me. I scored a 39/50 on my test. Although this score was way better than what I scored last test, I am trying to aim towards the A range of a grade. .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2023/03/07/Collegeboard.html",
            "relUrl": "/2023/03/07/Collegeboard.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "N@TM Blog",
            "content": "Pictures of other projects . . . . Reflection . The Night at The Museum event that I recently attended was one of the most memorable experiences I’ve had in a while. The reason for this is that it was not only an opportunity for me to showcase my own skills and ideas confidently, but also a chance to witness a wide range of captivating and stimulating concepts from other participants. The Create Performance Task was a flexible platform that allowed for endless opportunities, and the diverse ideas presented by the participants were truly impressive. It was an excellent opportunity to witness firsthand the power of collaboration and innovation. . The night was particularly special because the Full Stack process of web applications was used to create some of the projects. This approach ensured that the final products were not only creative and imaginative, but also practical and usable. This combination of creativity and practicality was truly inspiring and left a lasting impression on me. I was impressed by the level of skill and creativity displayed by everyone involved, and I was grateful for the opportunity to learn from such talented individuals. .",
            "url": "https://ethan2806.github.io/apcsp.github.io/apcsp%20week%2020/2023/02/28/N@TM.html",
            "relUrl": "/apcsp%20week%2020/2023/02/28/N@TM.html",
            "date": " • Feb 28, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "CPT Writeup",
            "content": "Write-Up (Weight Tracker) . 3a. . 3.a.i. . This feature is meant to store users weight into a database and allow user to update it . 3.a.ii. . The program stores weight, name, and date so that you can track how many days you have been at that weight and your rate of change .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2023/02/28/CPT.html",
            "relUrl": "/2023/02/28/CPT.html",
            "date": " • Feb 28, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "5.5 / 5.6 Notes",
            "content": "5.5 Notes . General Public Licensing (GPL) has been a focus of lawyers in recent years in the industry, particularly in relation to patents. | Qualcomm makes money through patents and wants all derivative work of GPL software to require a royalty payment. | Black Duck software helps manage security, quality, and license compliance of open source and third-party code. | Qualcomm has a team of lawyers analyzing code for GPL inclusion and its impact on the company’s ability to charge royalties. | Knowing the type of software license you use is important, as it can impact billions of dollars in business. | License communities and license types guide are available for authors to determine a license for their work. | Open source licenses include the MIT License, GPL License, and Creative Commons Zero v1.0 Universal. | Companies like Qualcomm need to take steps to protect their patents, including splitting distribution and separating public and private domain code. | Legal and ethical compliance with licenses is important, including citing sources. | DRM software protects content for music and movie companies, but consumers need to be aware of the licenses for software and their impact on their own ideas and businesses. | Red Hat established a business model around selling support agreements for its Linux distribution and served as a model for other companies. | Qualcomm figured out how to mix Patent and GPL businesses and has flourished since abandoning all proprietary, including Android in its business model. | Creative Commons and Open Source are free, but businesses need to have income and engineers need to use Open Source software according to terms of license. | . Blog Post Reflection . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. . 5.6 Notes . Personal Identifiable Information (PII) is information that can be used to identify a person. | PII can be easily obtained through social media, online searches, and other online activities. | Be cautious of the information you share online, as it can be easily accessed by others. | Keep sensitive information such as financial credentials, two-factor authentication codes, and social security numbers private. | Multi-factor authentication and biometrics can increase the security of your systems. | Symmetric and Asymmetric Encryption can also enhance the security of your systems. | Phishing and malware are potential threats that can compromise the security of your PII. | It is important to regularly review your PII vulnerabilities and take steps to protect your information. | . Blog Post Reflection: . Describe PII you have seen on project in CompSci Principles. An example of PII that I have seen in CompSci Principles is the SQLite Database that we made that stores user input information that is personal and only seen by the owners of the database. | . | What are your feelings about PII and your personal exposure? I feel that it can be good and bad, good for storing information of users but bad if the information gets hacked or leaked | . | Describe good and bad passwords? What is another step that is used to assist in authentication. -A good password is a password that includes a lot of characters that aren’t associated to your life, a bad password is a short password and easily guessable if people get your information especially if your password is associated with you | Try to describe Symmetric and Asymmetric encryption. Asymmetric encryption, also known as public-key encryption, is a method of encrypting data using two different keys: a public key and a private key. The public key is used to encrypt the message and the private key is used to decrypt it. Symmetric encryption, also known as shared secret encryption, is a method of encrypting data using the same key for both encryption and decryption. | . | Provide an example of encryption we used in AWS deployment. One example of encryption used in AWS deployment is the use of Secure Sockets Layer (SSL) certificates, which encrypt communication between a user’s browser and a website to prevent eavesdropping and tampering. | . | Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. Downloading a virus is a way that I got phished because I wanted to download hacks for my video games but it linked to a virus. Other phishing techniques include things that get people’s attention and make them click on links / download things | . | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/apcsp%20week%2020/2023/02/13/5.5-and-5.6.html",
            "relUrl": "/apcsp%20week%2020/2023/02/13/5.5-and-5.6.html",
            "date": " • Feb 13, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "5.3/5.4 Notes",
            "content": "5.3 . Google “What age groups use Facebook” vs “… TikTok”? What does the data say? Is there purposeful exclusion in these platforms? Is it harmful? Should it be corrected? Is it good business? | Facebook has more of a older age group and I think tik tok has a younger age group. I don’t think its harmful, but I think tik tok has more influence on future generations. Overall, 18 percent of users belonged to the 18 to 24-year age group. Facebook’s smallest audience can be found amongst teen users, with around one in every twenty users being aged between 13 to 17 years. The percentage of U.S.-based TikTok users by age: 10-19 – 32.5%, 20-29 – 29.5%, 30-39 – 16.4%, 40-49 – 13.9%, 50+ – 7.1%. This means that the TikTok userbase is aging up. | Why do virtual assistants have female voices? Amazon, Alexa Google, Apple Siri. Was this purposeful? Is it harmful? Should it be corrected? Is it good business? | The use of female voices are influenced by the belief of it to be percieved that female voices helpful. As tech futurist and author Bernard Marr tells Cosmopolitan UK, “Research might suggest that humans have a preference for the sound of female voices, and studies have found that female voices tend to articulate vowel sounds more clearly which makes them easier to understand. | Talk about an algorithm that influences your decisions, think about these companies (ie FAANG - Facebook, Amazon, Apple,Netflix, Google) | An algorithm that a lot of companies use is that they run a lot of advertisements on their page. Based on the content that they watch / search, ads will pop up related to whatever their video watch history or search history is | . Video Notes . Does the owner of the computer think this was intentional? The owner thinks it is intentional because he is too dark to get facial recognition | . | If yes or no, justify you conclusion. The owner thinks it is intentional because he is too dark to get facial recognition | . | How do you think this happened? This happened because of a lack of testing for their code and didn’t account for all colors of skin for facial recognition | . | Is this harmful? Was it intended to be harmful or exclude? It is harmful because that video is putting the image that the facial recognition is racist | . | Should it be corrected? Yes it should be corrected because they don’t want to be known as a racist company | . | What would you or should you do to produce a better outcome? Test the feature on all colors of skin and correct any errors that come out of it | . | 5.4 Notes . We have all experienced Crowdsourcing by using external data through API’s, namely RapidAPI. This data has influenced how we code and shown possibilities in obtaining and analyzing data. Discuss APIs you have used. I used a basketball API based on NBA Players with statistics of their points per game, rebounds per game, and assists | Some other people used API’s that gave you words for hangman | . | We have all participated in code Crowdsourcing by using GitHub. Many of you have forked from the Teacher repository, or exchanged code with fellow students. Not only can we analyze GitHub code, but we can obtain profiles and history about the persons coding history. What is the biggest discovery you have found in GitHub? I am able to clone repositories and wget certain files so that can save a substantial amount of time | . | Kaggle datasets for code and science exploration. The avenue of data points us youtube or netflix channels. Analyzing crowd data helps us make decisions. Exam top 10 to 20. Did you see anything interesting? I noticed that all of the trending sets are very unique and different from each other, they each have their own category and connect in different ways. For example, there is a good amount pertaining to social media such as youtube. | . | Summary . In reflection, it is clear that technology and data are increasingly influential in our daily lives and decision-making. We have seen the impact of algorithms in our online behavior and consumption habits, such as in the case of advertisements based on our search and watch history. Additionally, the use of APIs and crowdsourcing on platforms like GitHub and Kaggle have opened up avenues for data exploration and have allowed us to make informed decisions. One issue that emerged is the lack of representation in facial recognition technology, as the owner of the computer felt it was intentional due to the lack of recognition of his skin color. This highlights the importance of thorough testing and consideration of diverse populations in technology development. | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2023/02/05/5.35.4.html",
            "relUrl": "/2023/02/05/5.35.4.html",
            "date": " • Feb 5, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Rebecca's Presentation Notes",
            "content": "Presentation Notes . Outlined purpose and function of project | Explained the background and creativeness of the project | Went over the frontend page and how it was going to be coded | Displayed a database in the backend | Told us all the goals of their program | She went over the team’s agile manifesto | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2023/01/31/RebeccaNotes.html",
            "relUrl": "/2023/01/31/RebeccaNotes.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Project Blog",
            "content": "My Feature For My Project . My Feature consists of a Body Weight Macro Calculator that will give you a certain diet based off of your current weight and your goal weight . Consists of a text box in order to input your current and goal weight | Provide you with a certain diet to follow with calories, protein, fats, sugars, and fiber Collegeboard Rubric Requirements . Row 1: Program Purpose and Function . | Overall purpose of the program is so that users are able to get assisted with a calculator that will provide them with a working diet in order to achieve their weight goal | I plan on adding a feature such as wanting to gain more muscle mass or a goal as to losing fat so that they can get a workout plan into it as well | The input and output will be described in the video, this will consist of on how the output will be based on the users input into a certain diet | . Row 2: Abstraction . Data will be stored per user according to their login and the video will show the API giving the user their output | The variable is the output which is going to be your diet you are provided with | . Row 3: Managing Complexity . I will include a code segment that shows a list being used to manage complexity in the program by showing the users input and output that will be stored into our SQLite database | . Row 4: Procedural Abstraction . Our code segment will show that it is a student developed API that will provide users with an output | I will describe what the identified procedure does and how it contributes to the overall functionality of the program and how it contributes is by being the main part of the program by providing users with a diet to follow which will help the user improve its diet and physical health | . Row 5: Algorithm Implementation . I am not 100% sure how I am going to use it in Algorithm Implementation because I have a very different feature than the others in my group, but once I figure it out I will replace this answer. | . Row 6: Testing . I will give the one call because they are inputting two different text boxes but they are being calculated based on each other so it will be one call | The result of users output will be based on users input of current/goal weight | When user clicks on option to look for suggested workout plans, they will be provided videos that come from the search bar | . Video Plan . In my video, I am going to show the entire Body Weight Macro Calculator feature and how it will give you different outputs based on different inputs that I am going to enter. There is going to be a button that redirects you to the search bar based on the options that I am going to put on the page such as “Chest Workout”, “Back Workout”, “Bicep Workouts, and more features. I also plan to leave another button that just takes you to the search page just for you to browse whatever you feel like. .",
            "url": "https://ethan2806.github.io/apcsp.github.io/apcsp%20week%2020/2023/01/31/Myblog.html",
            "relUrl": "/apcsp%20week%2020/2023/01/31/Myblog.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "AP Classroom Collegeboard MCQ Test 2",
            "content": "Question 1 . The correct answer: D. x = 3, y = 2, z = 1, My answer: I selected option A, where x=1, y=2, and z=3, which operates correctly with the code. However, the question asked for the values that cause the code to not function properly. | . Question 6 . I chose option C and the correct answer was D because the expression (num MOD 2) will compute the remainder when num is divided by 2. This code fragment works as intended. | . Question 7 . I chose option A which was change all occurences of “goats” to “sheep” first and change occurences after but the correct answer was option C because it had 3 steps in it but the one I chose only had two, whereas in the answer I chose they forgot to include changing Foxes to Sheep. | . Question 11 . I chose option C which was false because if input B is false, the resulting value coming out of the OR gate will be true (since the value of A is true). Since the value of C is true, the resulting value coming out of the AND gate is true. This result contradicts the statement. | . Question 13 . I chose option A which was II only and the correct answer was option D as it was II and III only because options II and III provide ( age &gt; 16 ) and ( NOT (AGE&gt;18)) | . Question 14 . -I chose option C which was that the Input A could be true or false, correct answer was option A because it must be true in order for the function to fully run. If it is false than the function would stop . Question 16 . The option I selected (B) is incorrect because it only scans the list, whereas the correct option (C) is accurate because it selects distinct values to be summed up. | . Question 45 . -The selection of option A is incorrect as a heuristic approach involves finding an approximate solution instead of a precise one. This is utilized in situations where it is not feasible to solve a problem using an algorithm within a reasonable time frame. Hence, option C is the correct choice. . Question 47 . -The answer choice I selected (D) is incorrect, as sorting a list of numbers can typically be performed with a precise outcome and in a reasonable amount of time. The correct answer is (C) because a program to find the quickest driving route between two points can’t be calculated within a reasonable time frame as there are an infinite number of routes. However, an approximate solution is acceptable as it doesn’t have significant consequences. . Question 49 . The incorrect answer choice (B) assumes that all problems can be solved by a computer given enough time and an algorithm, but this is not the case. There are some problems that cannot be solved, hence why answer choice (D) is the correct one. . What I will do to improve . I will spend a lot more time watching videos and understanding the concepts better | I will ask peers for help when needed and not fall behind on any projects or assignments | . Reflection . Overall, I think I did really bad on this quiz and I think that I need to study more on certain topics and spend more time watching the videos that each section has attached to them. .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2023/01/30/MCQ2.html",
            "relUrl": "/2023/01/30/MCQ2.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Big Idea 5.1 and 5.2 Hacks",
            "content": "Big Idea 5.1 - Beneficial and Harmful Effects . Discussion Summary . Certain technologies such as UAVs/Drones and OpenAI/ChatGPT may have many benefits, but there can also be many negative effects as well | UAVs/Drones have benefits such as search and rescue, aerial photography, hobbies, etc. However, there are negatives such as environmental damage, privacy issues, etc. | OpenAi/ChatGPT can be useful and efficient for certain tasks, but there are negatives such as providing false information, promoting laziness, and causing a platform shift for things like Google | Games and social media can have positive and negative effects on people | Both of them are a good way to stay connected with others or make new friends | Both games and social media increase dopamine, making people feel happy, but this can lead to addiction and people may “waste time”, neglect their needs and other activities like self care and school, etc | Both games and social media are a hotspot of cyberbullying because the interactions are online | Social media is also a projection of peoples best moments and it is really fake, it can cause people to feel insecure | Social media is linked with mental illnesses such as depression, anxiety, etc | . Reflection . Question 1 . Come up with three of your own Beneficial and corresponding Harmful Effects of Computing: . Enhanced commmunication and access to information -&gt; data security and privacy concerns | Increased efficiency and productivity while doing certain tasks -&gt; dependence on technology and loss of tradictional skills | Increased convenience and improved quality of life through technology -&gt; widening digital divide and socioeconomic inequality | . Question 2 . Talk about dopamine issues above. Real? Parent conspiracy? Anything that is impacting your personal study and success in High School? . I think dopamine issues above are real. Social media and games are designed to be addicting so they can attract people and keep those people interested. Personally, there have been many times where I feel distracted by social medias such as Instagram and Tiktok and I find it hard to focus on my studies. | . Big Idea 5.2 - Digital Divide . Discussion Summary . Widening digital divide in today’s society, differerences in computers, internet, or tehcnology in general | Factors that contribute to divide include socioeconomic (money) geographic (location, and demographic (education, nationality, religion, and etnicity) | Many things, such as education, requires school to provide materials like computers or chrombooks for equity | . Reflection . Question 1 . How does someone empower themself in a digital world? . Someone can empower themself in a digital world by engaging with the digital world. For example, they can participate in online communities and social media, stay informed about digital trends, updates in technology, etc, and they can learn digital skills such as coding, digital marketing, etc. | . Question 2 . How does someone that is empowered help someone that is not empowered? Describe something you could do at Del Norte HS. . Someone empowered could help someone that is not empowered by informing them about certain information about the digital world. For example, someone might wnat to learn more about digital skills but might not know how. I could help teach them some or inform them about certain clubs and classes they could partake in, such as coding clubs, AP CSP/CSA, etc. | . Question 3 . Is paper or red tape blocking digital empowerment? Are there such barriers at Del Norte? Elsewhere? . Digital empowerment is blocked at different levels in different areas of the world or community, depending on how much that certain place as access to computers, internet, technology, etc. At Del Norte, I think the school does a good job at overcoming some of the barriers of blocked digital empowerment by providing chromebooks. However, there are some barriers that block digital empowerment for those who don’t have as much access to technology such as phones. | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/markdown/week%2020/2023/01/30/5.1-5.2.html",
            "relUrl": "/markdown/week%2020/2023/01/30/5.1-5.2.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Test 1, find user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$5cs...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$7uj...&#34; * name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$pT7...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$NcD...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$Us4...&#34; Test 2, change user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$5cs...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$7uj...&#34; * name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$mpH...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$NcD...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$Us4...&#34; Test 3, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$5cs8tbTu$9a67dcfdf9168ea1eeb0223947fffebcd29bf2449895792dda584fc0dd242d23&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$7ujzWhOD$43e364f035e369723280ef3300881c6333b110b61eb80cd5036019d427c5fc8a&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$mpH3Oeh7$dd39fe8928af0a18467575ea0d906727a3c634a3609559c17d1e686bcd9e40a8&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$NcDIisjN$29038100ec5160026e52a429cfaa1edb6240b77d1af0229ea16bee2d06e1a588&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$Us4drI6K$f2323630f8a8ded45a4a9f8beec2f2d135a907c9bb0bd594312f384cd1c4a452&#34;}] Test 4, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$5cs8tbTu$9a67dcfdf9168ea1eeb0223947fffebcd29bf2449895792dda584fc0dd242d23&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$7ujzWhOD$43e364f035e369723280ef3300881c6333b110b61eb80cd5036019d427c5fc8a&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$mpH3Oeh7$dd39fe8928af0a18467575ea0d906727a3c634a3609559c17d1e686bcd9e40a8&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$NcDIisjN$29038100ec5160026e52a429cfaa1edb6240b77d1af0229ea16bee2d06e1a588&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$Us4drI6K$f2323630f8a8ded45a4a9f8beec2f2d135a907c9bb0bd594312f384cd1c4a452&#34;}] . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json class User: def __init__(self, name, uid, password, dob, classOf): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob self._classOf = classOf #CLASS OF @property def classOf(self): return self._classOf @classOf.setter def classOf(self, classOf): self._classOf = classOf @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob # age is calculated and returned each time it is accessed @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # dictionary is customized, removing password for security purposes @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;uid&quot; : self.uid, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age, &quot;class_of&quot;: self.classOf } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;User(name={self._name}, uid={self._uid}, password={self._password},dob={self._dob}, class_of={self._classOf})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11), classOf=&quot;1915&quot;) print(u1) u2 = User(name=&quot;Ethan Truong&quot;, uid=&quot;basketball&quot;, password=&quot;123basketball&quot;, dob=date(2006,7,28), classOf=&quot;2024&quot;) print(u2) . {&#34;name&#34;: &#34;Thomas Edison&#34;, &#34;uid&#34;: &#34;toby&#34;, &#34;dob&#34;: &#34;02-11-1847&#34;, &#34;age&#34;: 175, &#34;class_of&#34;: &#34;1915&#34;} {&#34;name&#34;: &#34;Ethan Truong&#34;, &#34;uid&#34;: &#34;basketball&#34;, &#34;dob&#34;: &#34;07-28-2006&#34;, &#34;age&#34;: 16, &#34;class_of&#34;: &#34;2024&#34;} . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json class User: def __init__(self, name, classOf, uid, password, dob): self._name = name # variables with self prefix become part of the object, self._classOf = classOf self._uid = uid self.set_password(password) self._dob = dob @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name @property def classOf(self): return self._classOf # a setter function, allows name to be updated after initial object creation @classOf.setter def classOf(self, classOf): self._classOf = classOf # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob # age is calculated and returned each time it is accessed @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # dictionary is customized, removing password for security purposes @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;classOf&quot; : self.classOf, &quot;uid&quot; : self.uid, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;User(name={self._name}, classOf={self._classOf}, uid={self._uid}, password={self._password},dob={self._dob})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Thomas Edison&#39;, classOf=&#39;1865&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11)) print(&quot;JSON ready string: n&quot;, u1, &quot; n&quot;) print(&quot;Raw Variables of object: n&quot;, vars(u1), &quot; n&quot;) print(&quot;Raw Attributes and Methods of object: n&quot;, dir(u1), &quot; n&quot;) print(&quot;Representation to Re-Create the object: n&quot;, repr(u1), &quot; n&quot;) . JSON ready string: {&#34;name&#34;: &#34;Thomas Edison&#34;, &#34;classOf&#34;: &#34;1865&#34;, &#34;uid&#34;: &#34;toby&#34;, &#34;dob&#34;: &#34;02-11-1847&#34;, &#34;age&#34;: 175} Raw Variables of object: {&#39;_name&#39;: &#39;Thomas Edison&#39;, &#39;_classOf&#39;: &#39;1865&#39;, &#39;_uid&#39;: &#39;toby&#39;, &#39;_password&#39;: &#39;sha256$JOy86F4e$8d98a10803ab5a048490c2c16905da84cb1c5bdd6c658a4c54e991127e5ab9b3&#39;, &#39;_dob&#39;: datetime.date(1847, 2, 11)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_classOf&#39;, &#39;_dob&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;classOf&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Thomas Edison, classOf=1865, uid=toby, password=sha256$JOy86F4e$8d98a10803ab5a048490c2c16905da84cb1c5bdd6c658a4c54e991127e5ab9b3,dob=1847-02-11) .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2023/01/16/OOP.html",
            "relUrl": "/2023/01/16/OOP.html",
            "date": " • Jan 16, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Unit 3 Sections 17-18",
            "content": "Do Now!!! . Set up your notebook by either wgetting the lesson or tracking it by your own (We would recommend wgetting since there are some fill in the blanks!) | wget here: https://raw.githubusercontent.com/mmaxwu/Tri2-GroupFastpages/master/_notebooks/2022-12-dd-lesson.ipynb | . 3.17: Algorithm Efficiency . Purpose: . The purpose of this lesson is to help students understand how to make an efficient program and optimize it and understand its importance to the CSP curriculum. . What is Algorithmic Efficiency? . The ability of an algorithm to solve a problem in an efficient way An efficient algorithm solves a problem quickly and with a minimum amount of rescources, such as time and memory. | . | How do we determine if an algorithm is efficient or not? One way we can do this is by determining the time complexity of the algorithm. | Another way is through space complexity. | . | . Traveling Merchant Problem Hacks: . What did you and your team discuss? (record below) . An heuristic solution is an approach to a problem that produces a solution that isn&#39;t necessarily efficient but can be used when normal methods take forever | . Describe the method used to solve the traveling merchant problem. (record below) . 3.18: Undecidable Problems . Purpose: . The purpose of this lesson is to introduce students to the concept of undecidable problems in computer science and to explain why these problems are important. . Key vocabulary: . Decision problem | Decidable problem | Undecidable problem | . Decision Problem . A decision problem is a problem in computer science and mathematics that can be solved by a yes-no answer, also known as a binary answer. In other words, a decision problem is a problem for which there are only two possible outputs:&quot;yes&quot; or &quot;no&quot;. There are two types of decision problems that Collegeboard goes over: . Decidable Problems | Undecidable Problems | . A dedicable is a problem in computer science and mathematics for which an algorithm can be created that can always produce a correct answer or solution. In other words, a decidable problem is a problem for which there exists an algorithm that can be used to determine whether a given input is a valid solution or not. . An undecidable problem is a problem in computer science and mathematics for which it is impossible to create an algorithm that can always provide a correct answer or solution. This means that it is not possible for an algorithm to always determine whether a given input is a valid solution to an undecidable problem. . Decidable Problems . A decidable problem is an algorithm that can always have an output of yes or no given any input. It is always correct. . Example of a Decidable Problem . The procedure below tests to see if a number is divisible by 13. If it is, it returns true. If it isn&#39;t, it returns false. . def divideThirteen(number): if number % 13 == 0: return True else: return False print(divideThirteen(26)) print(divideThirteen(30)) . True False . Undecidable Problems . An Example of a Forever Running Code . The code keeps adding 1 to the variable number until number is no longer an integer(This is not the python data type &quot;integer&quot;, it&#39;s the integer in number theory). However, there is no end to this code, making the computer run forever. There is no halt to the code. . i = 0 number = 1 def integerTest(n): # Testing if the number is an integer if n%1 ==0: return True else: return False # Using while loop to keep searching an a non-integer above 1. Note that the computer runs forever. while i == 0: number += 1 if integerTest(number) == False: i +=1 print(&quot;Done&quot;) . KeyboardInterrupt Traceback (most recent call last) Cell In [3], line 12 10 while i == 0: 11 number += 1 &gt; 12 if integerTest(number) == False: 13 i +=1 14 print(&#34;Done&#34;) Cell In [3], line 5, in integerTest(n) 3 def integerTest(n): 4 # Testing if the number is an integer -&gt; 5 if n%1 ==0: 6 return True 7 else: KeyboardInterrupt: . The Halting Problem . The halting problem is an example of an undecidable problem. It states that it is not always possible to correctly determine whether a code halts or runs forever. . There is no way to write an algorithm to analyze and determine whether a body of code can run forever or not. . Halting Problem Example: . In order to understand this, suppose that an algorithm was able to analyze whether a code halts or not. Let&#39;s call this algorithm HaltChecker. | HaltChecker analyzes the program,program P, and its input,input I. If program P halts with input I, HaltChecker returns an output of &quot;halts&quot;. If program P doesn&#39;t halt(runs forever) with input I, HaltChecker returns an output of &quot;never&quot;. For example, in the code where it tests if variable number, the code runs forever, so HaltChecker returns an output of never. | Then, we add another algorithm called Reverser which reverses HaltChecker&#39;s output. So, if &quot;never&quot; is the output of HaltChecker, then the output of Reverser is halts. It&#39;s also the same the other way around: if HaltChecker has an output of &quot;halts&quot;, then Reverser has an output of never. | We combine these algorithms into one entire body of code. | Since Reverser is the algorithm at the end, hence giving the ultimate output, notice how it prints &quot;never&quot; when in fact there is an end(As proved by HaltChecker), and how it also prints &quot;halts&quot; when there is in fact is no end to the code(Also proved by HaltChecker). As a result, HaltChecker is inaccurate and this is an undecidable problem. | . This Diagram Sums up the Entire Process in the Bulleted List: . Credits of diagram and example to Khan Academy . FAQ . Q: If Reverser is causing the problem, why not remove it? | A: Removing Reverser will remove the problems, however, we are looking for ways which create the problem of not outputting a correct result. One example is enough to prove that it is an undecidable problem since it proves that the code is not completely accurate. | . Extra Things to Notice . Note that while a computer may take a long time to run a section of code, it does not mean that the computer is going to run forever. | Humans are able to solve some undecidable problems. The entire Halting Problem example was to prove that computers cannot solve undecidable problems. | . Hacks . Come up with one situation in which a computer runs into an undecidable problem. Explain why it is considered an undecidable problem. . 3.17 Homework . Your homework for Algorithmic Efficiency is pretty simple. . Use the 1st code below and graph it (Desmos, TI Inpire Cas, e.t.c), change the x value only! | Label the number of loops done as x and the time (microseconds) to find the index as y | Connect the points | Do the same thing with the 2nd code | Compare the two graphs and explain which one of the two is more efficient and why (min. 2 sentences) | Insert images of the graph either in your blog or on review ticket | import time def linear_search(lst, x): start_time = time.perf_counter_ns() for i in range(len(lst)): if lst[i] == x: end_time = time.perf_counter_ns() total_time = (end_time - start_time) // 1000 print(&quot;Found element after {} loops in {} microseconds&quot;.format(i+1, total_time)) return print(&quot;Your number was found at&quot;, i) end_time = time.perf_counter_ns() total_time = (end_time - start_time) // 1000 print(&quot;Element not found after {} loops in {} microseconds&quot;.format(len(lst), total_time)) return &quot;Your number wasn&#39;t found :(&quot; lst = list(range(1, 10001)) x = 9000 linear_search(lst, x) . Found element after 9000 loops in 1271 microseconds Your number was found at 8999 . . import time def binary_search(lt, x): start_time = time.perf_counter_ns() # starts timer low = 0 # sets the lower side mid = 0 # sets mid value high = len(lt) -1 # sets the higher side num_loops = 0 # number of loops the search undergoes to find the x value while low&lt;=high: # Loop ran until mid is reached num_loops += 1 # adds one loop each time process is repeated mid = (low + high) // 2 # takes the lowest and highest possible numbers and divides by 2 and rounds to closest whole # if lt[mid] == x: end_time = time.perf_counter_ns() # records time total_time = (end_time - start_time) // 1000 # time in microseconds print(&quot;Element found after {} loops in {} microseconds&quot;.format(num_loops, total_time)) # prints the results return mid # returns the index value elif lt[mid] &gt; x: # if mid was higher than x value, then sets new highest value as mid -1 high = mid -1 elif lt[mid] &lt; x: low = mid + 1 # if mid was lower than x, sets the new low as mid + 1 end_time = time.perf_counter_ns() total_time = (end_time - start_time) // 1000 print(&quot;Element not found after {} loops in {} microseconds&quot;.format(num_loops, total_time)) # prints the results return &quot;Your number wasn&#39;t found :(&quot; lt = list(range(1, 10001)) # list with numbers 1-10000 x = 149 # replace with an integer between 1 and 10000 (I suggest big numbers like 500, 2000, so on) binary_search(lt, x) # runs procedure . Element found after 13 loops in 16 microseconds . 148 . . 3.18 Homework: . Use the Jupyter notebook to write an algorithm that solves a decidable problem. You can use math or whatever else you would like to do. | Write code to get the computer to run forever. Check this example if you need help, but please come up with your own idea. | Homeworks, hacks, and classwork(filled in blanks) for both 3.17 and 3.18 are due on Thursday at 9:00 pm. -0.1 points for each day late. . def find_largest_number(numbers): # Set the initial largest number to be the first number in the list largest_number = numbers[0] # Loop through the remaining numbers in the list for number in numbers[1:]: # If the current number is larger than the largest number, update the largest number if number &gt; largest_number: largest_number = number # Return the largest number return largest_number # Call the find_largest_number function and pass it a list of numbers result = find_largest_number([1, 2, 3, 4, 5]) # Print the result print(result) . 5 . This algorithm takes in a list of numbers and iterates through the list to find the largest number. It does this by setting the initial largest number to be the first number in the list, and then iterating through the remaining numbers in the list to see if any are larger. If a larger number is found, the algorithm updates the largest number and continues iterating until all numbers have been checked. Finally, the algorithm returns the largest number. .",
            "url": "https://ethan2806.github.io/apcsp.github.io/lesson",
            "relUrl": "/lesson",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "3.16 Lesson",
            "content": "First Order of Business: Get your notebook . Open a terminal in vscode, run command: cd _notebooks, type &#39;wget&#39; and paste this link into said terminal and run it . | Take notes wherever you please, but you will be graded on participating . | . So, what is a simulation anyway? . A simulation is a tested scenario used for viewing results/outputs to prepare for them in real world situations . | These can be used for games like dice rolling, spinners, etc . | These can be used for practical things such as building structures, testing car crashes, and other things before engaging in them in the real world . | These simulations can have the option of obeying real world physics (Gravity, collision) or they can go against these norms since this is a fictitious scenario, and couldn&#39;t happen in real life . | . Big Question . Which of the following simulations could be the LEAST useful? . | A retailer trying to identify which products sold the most . | A restaurant determining the efficiency of robots | An insurance company studying the rain impact of cars | A sports bike company studying design changes to their new bike design | . If you guessed a bike company, you&#39;re wrong, because the retail simulation was the right answer. Simulating robots in food service, sudying rain impact on vehicles, and new bike design can contribute a lot more to society in comparison to seeing what products sell more than others. | . Next Big Question . If you were making a simulation for making a new train station, which of the following would be true about this simulation? . It could reveal potential problems/safety issues before construction starts | It cannot be used to test the train station in different weather | Simulation will add high costs to projects | Simulation is not needed because this train station already exists | . Potential Saftey was the right answer, because you need somewhere to test the safety and ethicness of what you&#39;re about to do before you start building it. Otherwise, let&#39;s just say you&#39;ll have a special plaque for FBI&#39;s Most Wanted | . Simulation 1: . Both programs below do the same thing. Given a height and a weight, they calculate how long it will take for a object to fall to the ground in a vacuum subjected to normal Earth levels of gravity. . However, the second one is a simulation. It calculates the distance the object has fallen every 0.1 seconds. This is useful for if you wanted a visual representation of a falling object, which pure math can&#39;t do as smoothly. . height = float(input(&quot;height in meters?&quot;)) weight = input(&quot;weight in pounds?&quot;) stuff = (2 * (height / 9.8))**(1/2) print(&quot;It will take&quot;, stuff,&quot;seconds for an object that weighs&quot;,weight,&quot;pounds&quot;,&quot;to fall &quot;,height,&quot;meters in a vacuum&quot;) . t = 0 g = 0 d = 0 false = True while false: t = t + 0.1 d = 9.8 / 2 * (t**2) if d &gt;= height: false = False #print(d) # if you want to print the distance every time it calculates it. Too long to output to a terminal, but this could be useful to display graphically. #print(t) print(t) print(d) . Simulation 2: . This simulation is made in order to simulate movement on a 2d plane vs a 3d plane. . | How it works: we have multiple variables, if statements and equations under a while command in order to randomy generate steps on a 2d plane. Once it reaches the set destination, it will say that the man made it home after x amount of steps. . | For the 3D plane, it takes a lot longer due to how big and open the 3d environment is, so there are more if statements in the 3d plane . | . (explain further) . import random x = 0 y = 0 nights = 0 turn = 0 stopped = 0 turns = [] while (nights &lt; 100): step = random.randrange(4) if step == 0: x = x+1 if step == 1: x = x-1 if step == 2: y = y+1 if step == 3: y = y-1 turn = turn + 1 if x == 0 and y == 0: nights = nights + 1 print(&quot;The Man Has Made It Home After &quot;, turn, &quot;Turns&quot;) turns.append(turn) turn = 0 if turn/1000 % 1000 == 0 and x + y != 0: print(&quot;(&quot;, x,y, &quot;)&quot;) if (turn &gt; 10000000): stopped = stopped + 1 turn = 0 x = 0 y = 0 nights = nights + 1 print(&quot;Caped&quot;) average = sum(turns) / len(turns) print(&quot;Avaerage&quot;, average, &quot;Ones that when&#39;t too long &quot;, stopped) . import random x = 0 y = 0 z = 0 nights = 0 turn = 0 stopped = 0 turns = [] while (nights &lt; 100): #rando movement step = random.randrange(6) if step == 0: x = x+1 if step == 1: x = x-1 if step == 2: y = y+1 if step == 3: y = y-1 if step == 4: z = z+1 if step == 5: z = z-1 #Turn counter turn = turn + 1 #Goal check if x == 0 and y == 0 and z == 0: nights = nights + 1 print(&quot;The Bird Has Made It Home After &quot;, turn, &quot;Turns&quot;) turns.append(turn) turn = 0 if turn/1000 % 1000 == 0 and x + y + z != 0: print(&quot;(&quot;, x,y, &quot;) &quot;,&quot;| &quot;, z) #Too long Stoper if (turn &gt; 10000000): stopped = stopped + 1 turn = 0 x = 0 y = 0 z = 0 nights = nights + 1 print(&quot;Caped&quot;) average = sum(turns) / len(turns) print(&quot;Avaerage&quot;, average,&quot;Ones that when&#39;t too long &quot;, stopped) . Simulations in the wild . Simulations are used extremely frequently in real life applications. One of the most common examples of simulations are video games. A games physics engine can accurately simulate objects colliding . Another example is Blender, the software used in 3d animations class, here at Del Norte. Blender is made up of many small simulations, but one big one it uses is simulating the way light bounces off of and interacts with objects. . HW !!! . Create a simulation. It can be anything, just has to simulate something. . Some ideas: . Two objects colliding | Gravity on other planets | . AND . Find an example of a simulation in a software/game you use, screenshot, and explain how it is a simulation . pos = 20 # The ball is initially moving upwards at a velocity of 30 units/second vel = 30 # The acceleration due to gravity is 5.5 units/second^2 downwards g = -5.5 # We will update the position of the ball every 0.2 seconds dt = 0.2 # Keep track of the time time = 0 # Main loop of the simulation while True: # Update the position of the ball pos = pos + vel * dt # Update the velocity of the ball vel = vel + g * dt # If the ball hits the ground, reverse its direction if pos &lt;= 0: vel = -vel # Increment the time by the timestep time = time + dt # Print the current position and velocity of the ball print(f&quot;Time: {time:.1f} s | Position: {pos:.1f} units | Velocity: {vel:.1f} units/s&quot;) # End the simulation after 10 seconds if time &gt;= 10: break . Time: 0.2 s | Position: 26.0 units | Velocity: 28.9 units/s Time: 0.4 s | Position: 31.8 units | Velocity: 27.8 units/s Time: 0.6 s | Position: 37.3 units | Velocity: 26.7 units/s Time: 0.8 s | Position: 42.7 units | Velocity: 25.6 units/s Time: 1.0 s | Position: 47.8 units | Velocity: 24.5 units/s Time: 1.2 s | Position: 52.7 units | Velocity: 23.4 units/s Time: 1.4 s | Position: 57.4 units | Velocity: 22.3 units/s Time: 1.6 s | Position: 61.8 units | Velocity: 21.2 units/s Time: 1.8 s | Position: 66.1 units | Velocity: 20.1 units/s Time: 2.0 s | Position: 70.1 units | Velocity: 19.0 units/s Time: 2.2 s | Position: 73.9 units | Velocity: 17.9 units/s Time: 2.4 s | Position: 77.5 units | Velocity: 16.8 units/s Time: 2.6 s | Position: 80.8 units | Velocity: 15.7 units/s Time: 2.8 s | Position: 84.0 units | Velocity: 14.6 units/s Time: 3.0 s | Position: 86.9 units | Velocity: 13.5 units/s Time: 3.2 s | Position: 89.6 units | Velocity: 12.4 units/s Time: 3.4 s | Position: 92.1 units | Velocity: 11.3 units/s Time: 3.6 s | Position: 94.3 units | Velocity: 10.2 units/s Time: 3.8 s | Position: 96.4 units | Velocity: 9.1 units/s Time: 4.0 s | Position: 98.2 units | Velocity: 8.0 units/s Time: 4.2 s | Position: 99.8 units | Velocity: 6.9 units/s Time: 4.4 s | Position: 101.2 units | Velocity: 5.8 units/s Time: 4.6 s | Position: 102.3 units | Velocity: 4.7 units/s Time: 4.8 s | Position: 103.3 units | Velocity: 3.6 units/s Time: 5.0 s | Position: 104.0 units | Velocity: 2.5 units/s Time: 5.2 s | Position: 104.5 units | Velocity: 1.4 units/s Time: 5.4 s | Position: 104.8 units | Velocity: 0.3 units/s Time: 5.6 s | Position: 104.8 units | Velocity: -0.8 units/s Time: 5.8 s | Position: 104.7 units | Velocity: -1.9 units/s Time: 6.0 s | Position: 104.3 units | Velocity: -3.0 units/s Time: 6.2 s | Position: 103.7 units | Velocity: -4.1 units/s Time: 6.4 s | Position: 102.9 units | Velocity: -5.2 units/s Time: 6.6 s | Position: 101.8 units | Velocity: -6.3 units/s Time: 6.8 s | Position: 100.6 units | Velocity: -7.4 units/s Time: 7.0 s | Position: 99.1 units | Velocity: -8.5 units/s Time: 7.2 s | Position: 97.4 units | Velocity: -9.6 units/s Time: 7.4 s | Position: 95.5 units | Velocity: -10.7 units/s Time: 7.6 s | Position: 93.3 units | Velocity: -11.8 units/s Time: 7.8 s | Position: 91.0 units | Velocity: -12.9 units/s Time: 8.0 s | Position: 88.4 units | Velocity: -14.0 units/s Time: 8.2 s | Position: 85.6 units | Velocity: -15.1 units/s Time: 8.4 s | Position: 82.6 units | Velocity: -16.2 units/s Time: 8.6 s | Position: 79.3 units | Velocity: -17.3 units/s Time: 8.8 s | Position: 75.9 units | Velocity: -18.4 units/s Time: 9.0 s | Position: 72.2 units | Velocity: -19.5 units/s Time: 9.2 s | Position: 68.3 units | Velocity: -20.6 units/s Time: 9.4 s | Position: 64.2 units | Velocity: -21.7 units/s Time: 9.6 s | Position: 59.8 units | Velocity: -22.8 units/s Time: 9.8 s | Position: 55.3 units | Velocity: -23.9 units/s Time: 10.0 s | Position: 50.5 units | Velocity: -25.0 units/s Time: 10.2 s | Position: 45.5 units | Velocity: -26.1 units/s .",
            "url": "https://ethan2806.github.io/apcsp.github.io/lesson/2022/12/15/Section16.html",
            "relUrl": "/lesson/2022/12/15/Section16.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Lists",
            "content": "Binary Search . What is Binary Search? . Binary search is a search algorithm that finds the position of a target value within a sorted array. Binary search compares the target value to the middle element of the array. | An algorithm for iterating to find a value inside a data set | Binary search compares the target value to the middle element of the array. An algorithm for iterating to find a value inside a data set | . def BinarySearch(array, x, low, high): # Repeat until the pointers low and high meet each other while low &lt;= high: mid = low + (high - low)//2 # find the middle (taking the higest index number plus the lowest and divided by two) if array[mid] == x: # if desired number is the middle is found return desired number (middle number) return mid elif array[mid] &lt; x: low = mid + 1 else: high = mid - 1 return -1 array = [3, 4, 5, 6, 7, 8, 9] x = 4 result = BinarySearch(array, x, 0, len(array)-1) if result != -1: print(&quot;Element is present at index &quot; + str(result)) else: print(&quot;Not found&quot;) . Element is present at index 1 . Data Abstraction . -Method used in coding to represent data in a useful form, by taking away aspects of data that aren&#39;t being used in the situation -Variables and lists are primary tools in data abstraction -Provides a separation between the abstract properties of a data type and the concrete details of its representation . quesCount = 0 score = 0 # Use a dictionary for the questions quesList = [&quot;What team is Lebron James on?&quot;, &quot;Who won the 2022 NBA Championship?&quot;,&quot;Who is the best player on the Mavericks?&quot;,&quot;Who is the best 3 point shooter in the NBA?&quot;] # Use a dictionary for the correct solutions soluList = [&quot;Lakers&quot;, &quot;Golden State Warriors&quot;, &quot;Luka Doncic&quot;, &quot;Stephen Curry&quot;] quesAmount= len(quesList) while quesCount &lt; quesAmount: print(quesList[quesCount] + &quot; n&quot;) guess = input() if(guess == soluList[quesCount]): score += 1 print(&quot;Correct! Score: &quot;) else: print(&quot;Incorrect! The correct answer was &quot; + soluList[quesCount] + &quot; n&quot;) print(quesCount) print(quesAmount) quesCount += 1 . Procedures . A procedure is a named group of programming instructions that may have parameters and return values. | Procedures are referred to by different names, such as method or function, depending on the programing language. | Parameters are input values of a procedure. Arguments specify the values of the parameters when procedure is called. | A procedure call interrupts the sequential execution of statements causing the program to execute the statements within the procedure before continuing. One the last statement in the procedure (or a return statement) has executed, flow or control is returned to the point immediately following where the procedure was called. | . def convertFahrenheit(temperature): celsius = temperature - 32 celsius = celsius * 5 / 9 return celsius outsideTemp = input(&quot;What is the temperature Outside?&quot;) print(convertFahrenheit(int(outsideTemp))) . Data Types . -String (or str or text) - combination of any characters -Character (or char) - single letters -Integer (or int) - whole numbers -Float (or Real) - numbers that contain decimal points, or for fractions. -Boolean (or bool) - data is restricted to True/False or yes/no options . brands = [&quot;baseball&quot;, &quot;soccer&quot;, &quot;basketball&quot;] #string numbers = [1, 2, 3, 4, 5] #integer truefalse = [True, False, True] #boolean . If else conditional statements . Can be seen as if statements or if blocks | . Can also be seen as if else statements or if else-blocks | . num1 = 100 num2 = 44 sum = num1 + num2 if sum == 200: { print(200) } else: { print(sum) } . What is a simulation? . A simulation is a tested scenario used for viewing results/outputs to prepare for them in real world situations | These can be used for games like dice rolling, spinners, etc | These can be used for practical things such as building structures, testing car crashes, and other things before engaging in them in the real world | These simulations can have the option of obeying real world physics (Gravity, collision) or they can go against these norms since this is a fictitious scenario, and couldn&#39;t happen in real life | . pos = 20 # The ball is initially moving upwards at a velocity of 30 units/second vel = 30 # The acceleration due to gravity is 5.5 units/second^2 downwards g = -5.5 # We will update the position of the ball every 0.2 seconds dt = 0.2 # Keep track of the time time = 0 # Main loop of the simulation while True: # Update the position of the ball pos = pos + vel * dt # Update the velocity of the ball vel = vel + g * dt # If the ball hits the ground, reverse its direction if pos &lt;= 0: vel = -vel # Increment the time by the timestep time = time + dt # Print the current position and velocity of the ball print(f&quot;Time: {time:.1f} s | Position: {pos:.1f} units | Velocity: {vel:.1f} units/s&quot;) # End the simulation after 10 seconds if time &gt;= 10: break . An example of changing values . currentScore = 10 highScore = currentScore currentScore = 7 print(highScore) 10 . Iteration . Iteration refers to the repetition of a process, and there are two types: indefinite and definite. In a definite iteration, it is clear how many times the loop will run, while in an indefinite iteration, the number of times the loop will run is not specified. For loops and while loops are examples of iteration. An object is considered iterable if it can be used in an iteration, and the built-in function &#39;iter()&#39; returns an iterator for an object. Some common examples of iterable objects include strings, lists, dictionaries, sets, and tuples. The break statement can be used to stop a loop prematurely. . words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] inp = input().lower() alpha = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;,&quot;g&quot;,&quot;h&quot;,&quot;i&quot;,&quot;j&quot;,&quot;k&quot;,&quot;l&quot;,&quot;m&quot;,&quot;n&quot;,&quot;o&quot;,&quot;p&quot;,&quot;q&quot;,&quot;r&quot;,&quot;s&quot;,&quot;t&quot;,&quot;u&quot;,&quot;v&quot;,&quot;w&quot;,&quot;x&quot;,&quot;y&quot;,&quot;z&quot;] for i in words: print(inp) . Procedures . A procedure, also known as a method or function, is a group of programming instructions that can accept input values (called parameters) and may return a value or perform a specific task. When a procedure is called, the program execution is temporarily interrupted and the statements within the procedure are executed before control is returned to the point where the procedure was called. It is important to note whether a procedure returns data or simply performs a block of statements. If it returns data, the value can be stored in a variable. For example, in Python, we can define a procedure named &quot;convertFahrenheit&quot; that converts temperature from Fahrenheit to Celsius. The pseudocode for this procedure might look like this: . def convertFahrenheit(temp_fahrenheit): temp_celsius = (temp_fahrenheit - 32) * (5/9) return temp_celsius temp_outside_fahrenheit = 72 temp_outside_celsius = convertFahrenheit(temp_outside_fahrenheit) print(temp_outside_celsius) .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2022/12/15/Notes.html",
            "relUrl": "/2022/12/15/Notes.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Unit 3 Sections 12-13",
            "content": "Calling Procedures . Slide 1: . A procedure is a named group of programming instructions that may have parameters and return values. | Procedures are referred to by different names, such as method or function, depending on the programing language. | Parameters are input values of a procedure. Arguments specify the values of the parameters when procedure is called. | A procedure call interrupts the sequential execution of statements causing the program to execute the statements within the procedure before continuing. One the last statement in the procedure (or a return statement) has executed, flow or control is returned to the point immediately following where the procedure was called. | . Slide 2: . When calling procedures, it&#39;s important to take notice to whether it returns data, or a block of statemenets. | If the procedure just returns a block of statements, you call the procedure by referring to the procedure name, and inputting the arguments. | If the procedure returns some sort of data like a boolean or value, then you will assign that value to a variable | . Slide 3: . Assume the Temperature outside is Fahrenheit. | The procedure convertFahrenheit is intended to convert from Fahrenheit to Celsius. | Convert the following psuedocode to python | . outsideTemp = int(input(&quot;What is the temperature outside in Fahrenheit? (Don&#39;t include units)&quot;)) def convertFahrenheit(temperature): celsius = temperature - 32 celsius = celsius * (5/9) celsius = round(celsius) print(celsius) convertFahrenheit(outsideTemp) . -11 . Developing Procedures . Slide 8: . Picking a descriptive name is important in case you revisit the code later on (separate words with capitals) There are 2 different types of procedures- ones that return a value and those that simply execute a block of statements Steps of developing procedure: picking a useful name, thinking of parameters (what data does the procedure need to know), making a flowchart or writing procedure in pseudocode, and actually developing the procedure. . Slide 9: . In this example, a teacher is writing a program that will replace the grade on a previous quiz if the new grade is better than the previous. . What would be a good name for this procedure? | What parameters do we need for this procedure? | Try writing this procedure out in python based on the given pseudocode | . currentPoints = int(input(&quot;How many points did you earn on the retake? (Positive integer&quot;)) quizGrade = int(input(&quot;How many points did you earn previously for the quiz? (Positive integer)&quot;)) quizTotal = int(input(&quot;How many points was the quiz out of? (Positive integer&quot;)) def quizReplace(currentPoints, quizGrade, quizTotal): quizGrade = (quizGrade/quizTotal) * 100 currentGrade = currentPoints / quizTotal currentGrade = currentGrade * 100 if (currentGrade &gt; quizGrade): quizGrade = currentGrade return quizGrade print(&quot;Your new grade on the quiz is &quot; + str(int(quizReplace(currentPoints, quizGrade, quizTotal))) + &quot;%&quot;) # inputted: currentPoints = 20 # quizGrade = 60 # quizTotal = 25 . Your new grade on the quiz is 90% . Procedural Abstraction . One type of abstraction is procedural abstraction which provides a name for a process and allows a procedure to be used only knowing what it does and not how it does it | This is very helpful in managing complexity in a program | Subdivision of a program into separate subprograms is called modularity | A procedural abstraction may extract shared features to generalize functionality instead of duplicating code. This allows for program reuse, which helps manage complexity | When a pre-written procedure is called, you don’t necessarily need to know the details of this, just what it does and how to call it | Simply, procedural abstraction is naming and calling a modularity procedure | Making sure to include the right arguments so the extract can do what its supposed to do is crucial | . Complexity Example . One of the biggest advantages of procedural abstraction is managing complexity. . Think about the process of simplifying the code? What do you think the advantage of the code segment on the left is? . Code Segment 1 Code Segment 2 . ROTATE_LEFT() | detourLeft() | . MOVE_FORWARD()|turnCorner()| ROTATE_RIGHT |MOVE_FORWARD()| MOVE_FORWARD()|MOVE_FORWARD()| MOVE_FORWARD() ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() MOVE_FORWARD() ROTATE_LEFT() MOVE_FORWARD() MOVE_FORWARD MOVE_FORWARD() . Hacks . Write a python procedure about something which can help you in school, for example the teacher’s function we spoke about earlier. | Points will be awarded based on creativity and functionality | 0.1 points will be deducted for late submissions | Submit the notes with all blanks filled in (scored out of 0.5 points) and the python procedure (scored out of 0.5 points) by Monday 12/12 at 11:59 PM. | . class Student: marks = [] def getData(self, rn, name, m1, m2, m3): Student.rn = rn Student.name = name Student.marks.append(m1) Student.marks.append(m2) Student.marks.append(m3) def displayData(self): print(&quot;What is your age: &quot;, Student.rn) print(&quot;Name is: &quot;, Student.name) print(&quot;Grade in subject 1: &quot;, Student.marks[0]) print(&quot;Grade in subject 2: &quot;, Student.marks[1]) print(&quot;Grade in subject 3: &quot;, Student.marks[2]) print(&quot;Average Grade of: &quot;, self.average()) GradeAverage = self.average() if (GradeAverage &gt; 90): print(&quot;your an A student&quot;) elif (GradeAverage &gt; 80): print(&quot;your a B Student&quot;) else: print(&quot;do better&quot;) def total(self): m = Student.marks return(Student.marks[0] + Student.marks[1] +Student.marks[2]) def average(self): return ((Student.marks[0] + Student.marks[1] +Student.marks[2])/3) r = int (input(&quot;Enter your age: &quot;)) name = input(&quot;Enter the name: &quot;) m1 = int (input(&quot;Enter the Grade in first subject: &quot;)) m2 = int (input(&quot;Enter the Grade in second subject: &quot;)) m3 = int (input(&quot;Enter the Grade in third subject: &quot;)) s1 = Student() s1.getData(r, name, m1, m2, m3) s1.displayData() . What is your age: 16 Name is: Ethan Truong Grade in subject 1: 91 Grade in subject 2: 82 Grade in subject 3: 99 Average Grade of: 90.66666666666667 your an A student .",
            "url": "https://ethan2806.github.io/apcsp.github.io/lessons/2022/12/12/Section10-12.html",
            "relUrl": "/lessons/2022/12/12/Section10-12.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Unit 3.3 and 3.4 Notes",
            "content": ". Arithmetic Operations . Addition: (+) | Subtraction: (-) | Multiplication (*) | Division: (/) | Getting the remainder: (%) | . Order of Operations . Operations in parentheses should be done first | &quot; * &quot; and &quot; / &quot; before &quot; + &quot; and &quot; - &quot; | &quot; % &quot; are similar to &quot; * &quot; and &quot; / &quot; | . Variables . Sequence is very important | Tracking variables is commonly used in the AP Exams and is an important thing | . Hacks/Homework . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 # 50/9 = 45 R=5; 5 + 15 = 20 = num2 # 2/5 + 40 = 40.4 = num 3 # 40.4 + (50/5) - 10 = 40.4 + 10 - 10 = 40.4 = num4 # Result = 40.4 - 20 = 20.4 # Checking answers print(Num1) print(Num2) print(Num3) print(Num4) print(Result) . 50 20 40.4 40.4 20.4 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 # num1 = 4 # 10/3 = 1 x 4 = 4 = num2 # 4 x 3 = 12 = num3 # 12/2 = 0 = Result # Checking answers print(Num1) print(Num2) print(Num3) print(Result) . 4 4 12 0 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueC) # 17 - 4 = 13 # valueA = 40 # code will print 17 since 13&gt;10 # Checking answers . 17 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) # Will print straightbrownshort # Checking answers . straightbrownshort . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = Noun[0:4] yoda = (Adjective + &quot; &quot; + Adjective2 + &quot; &quot; + abrev + &quot; &quot; + Verb + &quot;.&quot;) print(yoda) . handsome Very Mr.M is. . cookie = &quot;chocolate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len2 = len(cookie2) * 45 vote1 = (cookie + &quot; cookie votes: &quot; + str(len1)) # creating a string vote2 = (cookie2 + &quot; cookie votes: &quot; + str(len2)) # creating a string votes = (vote1 + &quot; &quot; + vote2) # displaying votes print(votes) . chocolate cookie votes: 4.5 rasin cookie votes: 225 .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2022/12/02/Hacks.html",
            "relUrl": "/2022/12/02/Hacks.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Data Abstracation",
            "content": "colorsList = [&quot;green&quot;, &quot;red&quot;, &quot;pink&quot;, &quot;purple&quot;, &quot;blue&quot;, &quot;brown&quot;] # creating a index d for i in colorsList: # recalling the indexes print(i) # prints them . green red pink purple blue brown . Changing Values . num1 = 5 num2 = 9 num1 = num2 print(num1) print(num2) . 9 9 . num1 = 15 num2 = 25 num3 = 42 num2 = num3 num3 = num1 num1 = num2 print(num1) print(num2) print(num3) . 42 42 15 . num2 += num1 print(num1) print(num2) print(str(num1)+ str(num2)) print(num1 + num2) . 42 84 4284 126 . quesCount = 0 score = 0 # Use a dictionary for the questions quesList = [&quot;What team is Lebron James on?&quot;, &quot;Who won the 2022 NBA Championship?&quot;,&quot;Who is the best player on the Mavericks?&quot;,&quot;Who is the best 3 point shooter in the NBA?&quot;] # Use a dictionary for the correct solutions soluList = [&quot;Lakers&quot;, &quot;Golden State Warriors&quot;, &quot;Luka Doncic&quot;, &quot;Stephen Curry&quot;] quesAmount= len(quesList) while quesCount &lt; quesAmount: print(quesList[quesCount] + &quot; n&quot;) guess = input() if(guess == soluList[quesCount]): score += 1 print(&quot;Correct! Score: &quot;) else: print(&quot;Incorrect! The correct answer was &quot; + soluList[quesCount] + &quot; n&quot;) print(quesCount) print(quesAmount) quesCount += 1 . What team is Lebron James on? Correct! Score: 0 4 Who won the 2022 NBA Championship? Correct! Score: 1 4 Who is the best player on the Mavericks? Correct! Score: 2 4 Who is the best 3 point shooter in the NBA? Incorrect! The correct answer was Stephen Cury 3 4 .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2022/12/02/3.1-3.2-Hacks.html",
            "relUrl": "/2022/12/02/3.1-3.2-Hacks.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Conditionals",
            "content": "Number1 = 20 Number2 = 10 if Number1 &gt; Number2: print(&quot;Number1 is greater than Number2&quot;) . Number1 is greater than Number2 . -Conditional statements may also be called if else statements . Number1 = 20 Number2 = 10 if Number1 &gt; Number2: print(&quot;Number1 is greater than Number2&quot;) else: print(&quot;Number2 is less than Number1&quot;) . Number1 is greater than Number2 . Participation . -Calculate the total sum of two numbers, if it is equal to 200, print 200, if otherwise, print the sum. . num1 = num2 = sum = num1 + num2 .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2022/11/30/Presentation.html",
            "relUrl": "/2022/11/30/Presentation.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Lesson Plan for 3.5-3.7",
            "content": "Notes on 3.6 Videos . 3.6: Daily Video 1 Notes . -Learning how to convey a selection-based method using visual representations such as flowcharts and pseudocode rather than a programming language . -Depending on whether a condition is true or false, selection dictates which steps of an algorithm are carried out. . -A finite set of instructions known as an algorithm is used to complete a particular task. includes combinations of iteration, sequencing, and selection. . -Using selection, we can decide amongst various options based on the outcome of a choice or condition. . 3.6: Daily Video 2 Notes . -By executing various statements depending on the result of a Boolean expression, conditional statements, commonly referred to as “if-statements,” alter the sequential flow of control. . -You may format them as if or if else blocks. . -Any statement in the block of statements is completed if the condition is true. . -IF IS merely one specific consequence, IF ELSE, two outcomes. After receiving user input, an IF statement will utilize that information to determine whether to put a Boolean expression in parenthesis or a block. . 3.6: Daily Video 3 Notes . -Discover how to interpret the output of conditional statements. . -If blocks or IF ELSE blocks can be used to change the execution flow of conditional statements in our program, giving us the option to choose between two possible results. . -Only when the IF condition is false does ELSE run. . -The use of IF statements enables us to take specific action depending on whether a condition is true or false. . Lesson Plan Idea . PearDeck 3.5-3.7 -The plan is that me and Derek are going to present our section of the peardeck. We will explain everything that you need to know from our 3.6 videos, we will switch off between the slides that we create. We plan on doing a reward for the people who get the questions right with something like candy. Our lesson for our section will last for nearly 10 minutes and a scenario we could do is ask a question and see how they would code it on a vscode situation. | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/apcsp%20week%2013/2022/11/17/Lessonplan.html",
            "relUrl": "/apcsp%20week%2013/2022/11/17/Lessonplan.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | . | | | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 16, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Night at the Museum",
            "content": "Computer Science Projects . Striver . . The first CS project I visited was from MORT Period 4 CSP. | They created Striver, a program that acts as a social media website for thoughts and quotes. The api they created randomly generated an inspirational quote that you could like and comment on. | . | As you can see from the image, I added my own post to their “forum” | . Stock Prices . . The other CSP project I visited was made by another group from MORT P4. | Their program tracks the stocks of a few major companies such as GOOGLE, APPLE, and Tesla, which is also the data from their API. | You can see this images tracks the stock price of a GOOGL stock price. | . Arts Projects . Graphic Design . . The first art project I visited was from a Graphic Design class. | After strolling around the graphic design area, this was the piece that caught my eye the most. | I love the way that it contrasts the light and dark setups. | . Art . . The next project I visited was in the art section where I saw this beautifully painted artpiece. | The Dark colors are what originally caught my eye, but after a few seconds of analyzing I could tell that the artists intentions behind the piece were most likely to spread awarness of global warming. | This is a really cool way to merge your personal beliefs with art. | . Ceramics . . Next I found myself in the ceramics section, where there were plenty of well made pieces. | This plate is the piece I liked the most because they got the San Diego Padres Logo and colors perfectly. | Additionally the pumpkin was made perfectly and was extremely detailed. | . Digital Media Production . . Finally, I concluded night at the museum by watching this individual’s PSA, where he talked about Food Waste. | He had many very interesting facts about the harm that Food Waste is bringing on our world, and made a very lasting impact on his listener to prevent themselves from wasting food. | . Overall Thoughts . I had a very good time at N@TM as I got to see all my friends and compare the projects that we have been working on all trimester. | Seeing all the different classes and perspectives of art was very fun, and I overall had a very good time at my first night at the museum | . Fantasy Football Project . . -He made a page based on football teams -Had a search bar -Had all teams with their own personal page . Star Wars Translated . -These guys made a really cool translator for star wars .",
            "url": "https://ethan2806.github.io/apcsp.github.io/markdown/2022/11/09/NIGHTMUSUEM.html",
            "relUrl": "/markdown/2022/11/09/NIGHTMUSUEM.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Final College Board MC",
            "content": "# Questions Missed -My score was 42/50 and the questions I missed were the following : #12, #28, #35, #40, #43, #44, #49, #50 . Corrections . # Questions Missed . -My score was 42/50 and the questions I missed were the following : #12, #28, #35, #40, #43, #44, #49, #50 . Corrections . 12 . A student is creating an application that allows customers to order food for delivery from a local restaurant. Which of the following is LEAST likely to be an input provided by a customer using the application? . Answer I picked : The credit card or payment information for the purchaser Correct Answer : The cost of a food item currently available for order . -The input that should least likely be provided is the cost of a food item currently available for the order because the price of the food is already listed on the delivery website and it shouldn’t be an input because they already know the price. . 28 . The cost of a customer’s electricity bill is based on the number of units of electricity the customer uses. . For the first 25 units of electricity, the cost is $5 per unit. For units of electricity after the first 25, the cost is $7 per unit. Which of the following code segments correctly sets the value of the variable cost to the cost, in dollars, of using numUnits units of electricity? . . -I picked D and the answer was C, the explanation for this is because the code charges the customers who use more than 25 units sof electricity and customers are only charged $7 for the first 25 units but $5 for each subsequent unit. (32-5=7 units). . 35 . In a certain video game, the variable maxPS represents the maximum possible score a player can earn. The maximum possible score depends on the time it takes the player to complete the game. The value of maxPS should be 30 if time is greater than 120 and 50 otherwise. . Which of the following code segments correctly sets the value of maxPS based on the value of time ? . Select two answers. . . -I selected D and B. The correct answer was A and D so I got 1/2 on this question. Answer B was incorrect because it sets maxPS to 50 but it didn’t include the value fo time in it which makes it wrong. The correct answer instead of this was A because the maxPS was set to 50 on top, and not the bottom. . 40 . . I selected that nothing will be displayed but that was wrong because no matter what values are plugged in for the variables given, there will always be something shown. The answer is -2 because since 3 is less than 5, the program will print 3-5=-2. . 43 . . I picked answer D, which was 21 and it is incorrect because everytime, the value is getting added by 6. The answer is not 21 because it would have to be looped again and it wouldn’t add up to 15. The correct answer is 15. . 44 . . I chose 2, when the correct answer is 3 because 23 is divided by 3 is 2 and 23 MOD 3 = 2 . 49 . . I chose the answer B, and the code will execute and produce the words in reverse, therefore making it produce the word “onon”. The correct answer is C because it produces the word No first, then produces on after which is No in reverse. Therefore creating the word noon. . 50 . . I chose answer D, which was incorrect and it was incorrect because it assigns the first two characters of the result to the initials which isn’t supposed to happen, whereas option A, it correctly forms the initials because it calls to obtain the first letters of each name and bputs it in the correct order. .",
            "url": "https://ethan2806.github.io/apcsp.github.io/markdown/2022/11/07/Collegeboardcorrections.html",
            "relUrl": "/markdown/2022/11/07/Collegeboardcorrections.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Identifying and Correcting Errors College Board 1.4 Notes and Quiz",
            "content": "1.4 College Board Video Notes . 1.4.1 . Errors are innevitable in programming | In errors in an algorithm or program, there are 4 types of errors: Logic Error:A mistake in the algorithm that causes it behave incorrectly or unexpectedly | Syntax Error: A mistake in the program where the rules in the programming language are not followed | Run-time error: Mistake in the program that occurs during the excecution of the program. Dependent on the language. Usually refered to as a bug. | Overflow error: error that occurs when a computer attempts to handle a number that is outside of the defined range of values. | . | . 1.4.2 . Understanding how to correct errors is essential to programming | Best ways to correct errors Test cases | Hand tracing | Visualizations | Debuggers | adding extra output statements. | . | The syntax error is usually the easiest error to fix it tells the programmer which line and what the error was. | . | Logic errors are difficult to find and fix. | . 1.4.3 . Programmers should come up with testing schemes to ensure that their program works. Identify inputs and correspondng exprected outputs or behaviors check the correctness of the algorithm or program. | . | Defined inputs used to test a program should demonstrate the different exprected outcomes that are at or just beyond the min and max of input data | Program requirements identify appropriate defined inputs for testing. | As soon as they start programming, they should constantly be testing. | . Picture of Completion . .",
            "url": "https://ethan2806.github.io/apcsp.github.io/markdown/2022/10/10/Collegeboardquiz.html",
            "relUrl": "/markdown/2022/10/10/Collegeboardquiz.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 0 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter a is the 0 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [0, 2, 4, 6, 8, 10] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 0): odds.append(numbers[i]) print(odds) . [0, 2, 4, 6, 8, 10] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 0, 2, 4, 5, 6, 8, 10, 10, 12, 14, 15, 16, 18, 20, 20, 22, 24, 25, 26, 28, 30, 30, 32, 34, 35, 36, 38, 40, 40, 42, 44, 45, 46, 48, 50, 50, 52, 54, 55, 56, 58, 60, 60, 62, 64, 65, 66, 68, 70, 70, 72, 74, 75, 76, 78, 80, 80, 82, 84, 85, 86, 88, 90, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 print(&quot;Menu&quot;) for k,v in menu.items(): # k is the item name, &quot;v&quot; is the items price print(k + &quot; $&quot; + str(v)) #str changes a numeric value which is (v) menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) # prompts the user asking them questions about items burger = input(&quot;Do you want a burger?&quot;) if burger == &quot;yes&quot;: total += 3.99 else: total += 0 fries = input(&quot;Do you want fries?&quot;) if fries == &quot;yes&quot;: total += 1.99 else: total += 0 drink = input(&quot;Do you want a drink?&quot;) if drink == &quot;yes&quot;: total += 1.99 else: total += 0 # adds the total of the menu items that were selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 Menu burger $3.99 fries $1.99 drink $0.99 7.970000000000001 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Quote API . To begin the API journey. You need to find an API provider. . I used a motivational quote API Motivation Quote Data- This API pulls random motivational quotes from a website -It will prompt you to rate the quote from 1-10 each time it generates a quote | . import requests url = &quot;https://motivational-quotes1.p.rapidapi.com/motivation&quot; payload = { &quot;key1&quot;: &quot;value&quot;, &quot;key2&quot;: &quot;value&quot; } headers = { &quot;content-type&quot;: &quot;application/json&quot;, &quot;X-RapidAPI-Key&quot;: &quot;97cada0567msh30f120b09c87306p148cacjsn5a7d8d05dc40&quot;, &quot;X-RapidAPI-Host&quot;: &quot;motivational-quotes1.p.rapidapi.com&quot; } response = requests.request(&quot;POST&quot;, url, json=payload, headers=headers) rating =int(input(&quot;Please rate the quote on a scale from 1 to 10&quot;)) if rating &lt;= 10 and rating &gt;= 1: print(&quot;You rated this quote&quot;, rating, &quot;out of 10&quot;) else: print(&quot;Please have a rating between 1 and 10&quot;) print(response.text) . You rated this quote 10 out of 10 &#34;Something opens our wings. Something makes boredom and hurt disappear. Someone fills the cup in front of us: We taste only sacredness.&#34; -Rumi . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://ethan2806.github.io/apcsp.github.io/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 6, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Identifying and Correcting Errors College Board 1.4 Notes and Quiz",
            "content": "1.4 College Board Video Notes . 1.4.1 . Errors are innevitable in programming | In errors in an algorithm or program, there are 4 types of errors: Logic Error:A mistake in the algorithm that causes it behave incorrectly or unexpectedly | Syntax Error: A mistake in the program where the rules in the programming language are not followed | Run-time error: Mistake in the program that occurs during the excecution of the program. Dependent on the language. Usually refered to as a bug. | Overflow error: error that occurs when a computer attempts to handle a number that is outside of the defined range of values. | . | . 1.4.2 . Understanding how to correct errors is essential to programming | Best ways to correct errors Test cases | Hand tracing | Visualizations | Debuggers | adding extra output statements. | . | The syntax error is usually the easiest error to fix it tells the programmer which line and what the error was. | . | Logic errors are difficult to find and fix. | . 1.4.3 . Programmers should come up with testing schemes to ensure that their program works. Identify inputs and correspondng exprected outputs or behaviors check the correctness of the algorithm or program. | . | Defined inputs used to test a program should demonstrate the different exprected outcomes that are at or just beyond the min and max of input data | Program requirements identify appropriate defined inputs for testing. | As soon as they start programming, they should constantly be testing. | . Identifying and Correcting Errors Quiz . | . Hacks . We could have many syntax errors, becuse most of my group is not expirienced with coding in any language. | After we manage to create the code for the journal we will do test runs of every mood, category and journal type. | If we do expirience any bugs, we will converse as a group, discuss with classmates, search up on google, or ask the teacher for assistance to fix it. | We will rerun the code evertime we add something to ensure that it works. | Our steps to testing will be 1: Code the interface, 2: code the journal, and 3: code the lists, making sure to test and document evertime. | .",
            "url": "https://ethan2806.github.io/apcsp.github.io/markdown/2022/10/03/Collegeboard_notes.html",
            "relUrl": "/markdown/2022/10/03/Collegeboard_notes.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Scrum Team Roles and Explanation",
            "content": "Scrum Team Roles . My team and I decided on the following roles: . Jeffrey: Scrum Master | Luke: DevOps | Ethan: Frontend Developer | James: Backend Developer | . As front end developer, I will make sure my team&#39;s website is looking good visually. My team will count on me for that because the front end developer&#39;s job is to make the website look visually good. . The website will have a sports theme in the front page with my design. .",
            "url": "https://ethan2806.github.io/apcsp.github.io/jupyter/2022/09/27/scrumboard.html",
            "relUrl": "/jupyter/2022/09/27/scrumboard.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Movie Data Generator",
            "content": "Movie Generator . This is a button that will randomly generate a movie name | . Click Me For A Movie! . . Using Javascript, you have to insert in the variables that you want to be included into your random generator. In my case, my variables were a bunch of movies that I decided to use in my project! . .",
            "url": "https://ethan2806.github.io/apcsp.github.io/moviegeneratordata/",
            "relUrl": "/moviegeneratordata/",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "JavaScript Tutorial",
            "content": ". console.log output . Output to console using the classic programming introduction using a &quot;Hello, Ethan!&quot; message. . The command or function is console.log() | &quot;Hello, Ethan&quot; is a String literal. This is the referred to as Static text, as it does not change. | &quot;Hello, Ethan&quot; is a parameter to the console.log command. | The console.log command outputs the parameter to the console, so you can see it in this Jupyter document. | Note, in a Web Application, console.log is used for debugging and is not visible from the browser via HTML. It is used behind the scenes, when using Inspect-&gt;Console from the browser. | . console.log(&quot;Hello, Ethan!&quot;); . Hello, Ethan! . console.log output showing use of variable . This second example is a sequence of code, two or more lines forms a sequence. This example defines a variable, then outputs the msg to terminal. . The variable &quot;var msg =&quot; is used to capture the data | The console.log(msg) outputs to console. | . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . console.log output showing use of a function . This example passes the previously defined variable &quot;msg&quot; to the newly defined &quot;function logIt(output)&quot;. . There are two steps in the code, the definition of the function and the call to the function. &quot;function logIt(output) {}&quot; and everything between curly braces is the definitions of the function. | &quot;logIt(msg)&quot; is the call to the function, this actually activates the function. If you remove this line you will not receive any output to console. | . | Since the variable &quot;msg&quot; was defined in previous cell, it is used a parameter when calling the logMessage function. | . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . Showing reuse of a function . Now that a function is defined, it can be called from any of the subsequent cell in the Jupyter notebook. A function/method, is a process of creating a procedural abstraction. This a programming practice to promote reuse versus coding the same thing over and over. . First call sends a different string message | Second call sends a number | . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . Dynamic or Loosely typed language (string, number) . JavaScript is a loosely typed language, meaning you don&#39;t have to specify what type of information will be stored in a variable in advance. The variable type is determined at runtime. This is similar to Python and most interpretive languages. Java which is a compiled language is strongly typed, thus you will see string, integer, double, and object in the source code. In JavaScript, the &quot;typeof&quot; keyword returns the type. . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 object ; [ 1, 2, 3 ] . Build a Person Function/Class object and JSON . JavaScript functions have special properties and syntax is shown in many ways. In fact, a Class in JavaScript is a special function. Jupyter Notebooks seems to be more friendly to &quot;function&quot; definitions versus &quot;Class&quot;, thus this lesson uses &quot;function&quot; and &quot;prototype&quot; versus &quot;Class&quot;. . Definition of function allows for a collection of data, the &quot;function Person&quot; allows programmer to retain name, github id, and class of designation. | Definition of a prototype allow for the definition of a method associated with the function , the &quot;Person.prototype.toJSON&quot; allows the collection of data to be expressed in a json/string versus JavaScript object. | Instance of a function, the &quot;var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977)&quot; line makes a variable &quot;teacher&quot; which is an object representation of &quot;function Person&quot;. | . // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); teacher.setRole(&quot;Teacher&quot;); // output of Object and JSON/string associated with Teacher logItType(teacher); // object type is easy to work with in JavaScript logItType(teacher.toJSON()); // json/string is useful when passing data on internet . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . Build a Classroom Array/List of Persons and JSON . Many key elements are shown again. New elements include... . Building an Array, &quot;var students&quot; is an array of many persons | Building a Classroom, this show forEach iteration through an array and .push adding to an array. These are key concepts in all programming languages. | . // define a student Array of Person(s) var students = [ new Person(&quot;Ethan&quot;, &quot;Ethan2806&quot;, 2024), new Person(&quot;James&quot;, &quot;1905047&quot;, 2024), new Person(&quot;Luke&quot;, &quot;RigTig123&quot;, 2023), new Person(&quot;Jeffrey&quot;, &quot;TheGerbil21&quot;, 2023), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; }, Person { name: &#39;Ethan&#39;, ghID: &#39;Ethan2806&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;James&#39;, ghID: &#39;1905047&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Luke&#39;, ghID: &#39;RigTig123&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Jeffrey&#39;, ghID: &#39;TheGerbil21&#39;, classOf: 2023, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . IJavaScript and Table formatting using toHTML method . This example builds a Classroom method _toHTML which is passed to the IJavaScript interpreter $$.html which renders output similarly to a real website. . JavaScript in the _toHTML method is broken into three parts... Style part is building CSS inline formatting | Body part is constructing the Table Rows (tr), Table Headings (th), and Table Data (td). The table data is obtained from a Classroom object. The JavaScript for loop allows the construction of a new row of data for each person object in the Array. | Return part creates the HTML fragment for rendering | . | The last line in the example $$.html is IJavaScript HTML interpreter and by passing the parameter of the _toHTML method it obtains HTML to render | . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;background:black;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Ethan | Ethan2806 | 2024 | Student | James | 1905047 | 2024 | Student | Luke | RigTig123 | 2023 | Student | Jeffrey | TheGerbil21 | 2023 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://ethan2806.github.io/apcsp.github.io/techtalk/javascript",
            "relUrl": "/techtalk/javascript",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Lists and Dictionaries",
            "content": "print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;John Doe&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 18 print(&quot;age&quot;, age, type(age)) print() # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . What is the variable name/key? value? type? primitive or collection, why? name John Doe &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? age 18 &lt;class &#39;int&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? score 90.0 &lt;class &#39;float&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;] &lt;class &#39;list&#39;&gt; length 3 - langs[0] Python &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? What is different about the dictionary output? person {&#39;name&#39;: &#39;John Doe&#39;, &#39;age&#39;: 18, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] John Doe &lt;class &#39;str&#39;&gt; . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Ethan&quot;, &quot;LastName&quot;: &quot;Truong&quot;, &quot;DOB&quot;: &quot;July 28&quot;, &quot;Residence&quot;: &quot;4s Ranch&quot;, &quot;Email&quot;: &quot;truong.ethan@yahoo.com&quot;, &quot;Owns_Cars&quot;: [&quot;BMW&quot;] }) # Print the data structure # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Liav&quot;, &quot;LastName&quot;: &quot;Bar&quot;, &quot;DOB&quot;: &quot;August 9&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;liavbar5@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;2020-Camry&quot;, &quot;2017-Sorento&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Re&#39;em&quot;, &quot;LastName&quot;: &quot;Ben-Ishai&quot;, &quot;DOB&quot;: &quot;May 11&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;ReemB@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2021-Kona&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Ethan&#39;, &#39;LastName&#39;: &#39;Truong&#39;, &#39;DOB&#39;: &#39;July 28&#39;, &#39;Residence&#39;: &#39;4s Ranch&#39;, &#39;Email&#39;: &#39;truong.ethan@yahoo.com&#39;, &#39;Owns_Cars&#39;: [&#39;BMW&#39;]}, {&#39;FirstName&#39;: &#39;Liav&#39;, &#39;LastName&#39;: &#39;Bar&#39;, &#39;DOB&#39;: &#39;August 9&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;liavbar5@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;2020-Camry&#39;, &#39;2017-Sorento&#39;]}, {&#39;FirstName&#39;: &#34;Re&#39;em&#34;, &#39;LastName&#39;: &#39;Ben-Ishai&#39;, &#39;DOB&#39;: &#39;May 11&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;ReemB@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2021-Kona&#39;]}] . Using Index in For Loop . list = [&quot;Mercedes&quot;,&quot;Toyota&quot;,&quot;Tesla&quot;,&quot;Honda&quot;,&quot;Hyundai&quot;,&quot;Bugatti&quot;] for i in list: print(i) . Mercedes Toyota Tesla Honda Hyundai Bugatti . Outputing In Reverse Order . list = [&quot;Mercedes&quot;,&quot;Toyota&quot;,&quot;Tesla&quot;,&quot;Honda&quot;,&quot;Hyundai&quot;,&quot;Bugatti&quot;] for i in list: print(i[::-1]) print(list[::-1]) . sedecreM [&#39;Bugatti&#39;, &#39;Hyundai&#39;, &#39;Honda&#39;, &#39;Tesla&#39;, &#39;Toyota&#39;, &#39;Mercedes&#39;] atoyoT [&#39;Bugatti&#39;, &#39;Hyundai&#39;, &#39;Honda&#39;, &#39;Tesla&#39;, &#39;Toyota&#39;, &#39;Mercedes&#39;] alseT [&#39;Bugatti&#39;, &#39;Hyundai&#39;, &#39;Honda&#39;, &#39;Tesla&#39;, &#39;Toyota&#39;, &#39;Mercedes&#39;] adnoH [&#39;Bugatti&#39;, &#39;Hyundai&#39;, &#39;Honda&#39;, &#39;Tesla&#39;, &#39;Toyota&#39;, &#39;Mercedes&#39;] iadnuyH [&#39;Bugatti&#39;, &#39;Hyundai&#39;, &#39;Honda&#39;, &#39;Tesla&#39;, &#39;Toyota&#39;, &#39;Mercedes&#39;] ittaguB [&#39;Bugatti&#39;, &#39;Hyundai&#39;, &#39;Honda&#39;, &#39;Tesla&#39;, &#39;Toyota&#39;, &#39;Mercedes&#39;] . Other Methods Performed By Lists . QuizThat Stores In a List of Dictionaries . def question_with_response(prompt): print(&quot;Question: &quot; + prompt) word = &quot; &quot; questions = 4 # number of questions correct = 0 questions_answers = [{&quot;What command is used to include other functions that were previously developed?&quot; : &quot;import&quot;, &quot;What command is used to evaluate correct or incorrect response in this example?&quot; : &quot;if&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot; : &quot;expression&quot;, &quot;Variables for the values the function needs. Is passed as an argument when the function is called&quot; : &quot;parameters&quot;}] # dictionary # questions_answers.append = ({&quot;What command is used to include other functions that were previously developed?&quot; : &quot;import&quot;, # &quot;What command is used to evaluate correct or incorrect response in this example?&quot; : &quot;if&quot;, # &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot; : &quot;expression&quot;, # &quot;Variables for the values the function needs. Is passed as an argument when the function is called&quot; : &quot;parameters&quot;}) # dictionary for i in questions_answers: for question, answer in i.items(): question_with_response(question) # printing the questions word = input(&quot;Answer: &quot;) # variable that connects to the user&#39;s input if word == answer: # if the answer provided is correct print(&quot;You got it right!!&quot;) correct += 1 else: # if the answer provided is wrong print(&quot;Your answer was wrong&quot;) print(str(correct) + &quot;/&quot; + str(questions)) # correct/len(questions_answers) . Question: What command is used to include other functions that were previously developed? You got it right!! Question: What command is used to evaluate correct or incorrect response in this example? You got it right!! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? You got it right!! Question: Variables for the values the function needs. Is passed as an argument when the function is called You got it right!! 4/4 . New Dictionary Data Set .",
            "url": "https://ethan2806.github.io/apcsp.github.io/python/2022/09/02/infoDB.html",
            "relUrl": "/python/2022/09/02/infoDB.html",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "BashKernel",
            "content": "Python Versions . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Anaconda Files . conda list . # packages in environment at /home/Ethan/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.8.0 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . Anaconda Versions . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Version + Files . jupyter --version jupyter kernelspec list . Python Folder . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /home/Ethan/.local/share/jupyter/kernels/python3 .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2022/08/29/Tools-Check.html",
            "relUrl": "/2022/08/29/Tools-Check.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Title",
            "content": ". toc: true layout: post description: Ethan&#39;s Python Quiz questions categories: [markdown] . Python Quiz . Python Quiz . A display of the Python Quiz . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 4 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;What does the NBA stand for?&quot;) if rsp == &quot;National Basketball Association&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What team has the theme color of Purple and Yellow?&quot;) if rsp == &quot;Lakers&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Who is the best player on the Lakers?&quot;) if rsp == &quot;Lebron James&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What is the line on the side of the court called?&#39;&quot;) if rsp == &quot;Sideline&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What do you shoot when you get fouled?&#39;&quot;) if rsp == &quot;Free Throws&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, Ethan2806 running c: Users Ethan2806 anaconda3 2 python.exe You will be asked 4 questions. Question: Are you ready to take a test? Question: What team has the theme color of Purple and Yellow? Lakers is correct! Question: Who is the best player on the Lakers? Lebron James is correct! Question: What is the line on the side of the court called? Sideline is correct! Question: What do you shoot when you get fouled? Free Throws is correct! Ethan2806 you scored 4/4 .",
            "url": "https://ethan2806.github.io/apcsp.github.io/2022/08/28/Ethan's-Quiz.html",
            "relUrl": "/2022/08/28/Ethan's-Quiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Ethan's Jupyter Notebook Post",
            "content": "My Favorite Vacation Spot . My favorite vacation was when I went to Cancun, Mexico. In Cancun, I did have one of the scariest experiences of my life when I fell off a jetski in the middle of the beach because there was a huge wave. Besides that, everything else was fun. The beach was very fun with huge waves. The one downside to Cancun is that the air is very humid. Other than that, we did things like parasailing, jet skiing, and swimming and it was super fun. . .",
            "url": "https://ethan2806.github.io/apcsp.github.io/jupyter/2022/08/26/JupyterNotebook.html",
            "relUrl": "/jupyter/2022/08/26/JupyterNotebook.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://ethan2806.github.io/apcsp.github.io/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me/Goals",
          "content": "This website is powered by fastpages 1. . My Goals in APCSP . I took this class because I plan on majoring in computer science in college. Ever since I was a little kid I was into computers and video games. I realized that I was more advanced than most people in computers and how to navigate. I want to learn about coding and python coding so I can take these skills further into college classes and my major. . My background life . My name is Ethan Truong and I am 16 years old born on July 28th, 2006. I live at home with my mom, dad, and my brother. My brother is a freshman here at this school. I grew up in the area of Linda Vista with my grandparents and eventually moved out to 4s Ranch. I love to play basketball and video games on my freetime. Video games I play include valorant and warzone. Thanks for reading! . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://ethan2806.github.io/apcsp.github.io/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://ethan2806.github.io/apcsp.github.io/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}